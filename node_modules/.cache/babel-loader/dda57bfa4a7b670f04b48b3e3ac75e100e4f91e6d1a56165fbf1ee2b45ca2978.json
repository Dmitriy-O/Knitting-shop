{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Portfolio\\\\full-stack\\\\front-end\\\\src\\\\components\\\\categories\\\\Main_Items.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n// import Services from \"../../services/GetCategories\";\nimport Services from \"../../services/Services\";\n// import { Image } from \"react-bootstrap\";\nimport \"../../style/Main_Categories.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainItems() {\n  _s();\n  const [loading, setloading] = useState(true);\n  const [items, setItems] = useState(null);\n\n  // The useEffect hook is a React hook that allows you to perform side effects in your components. Side effects are things like fetching data, updating the DOM, or making network requests.\n  /**\r\n   * This hook is responsible for fetching category data from a service.\r\n   *\r\n   * It performs the following tasks:\r\n   * 1. On component mount, it triggers the `fetchData` function.\r\n   * 2. It sets a loading state to `true` before starting the fetch process.\r\n   * 3. It makes a request to get categories from the `Services` object.\r\n   * 4. Once the response is received, it updates the `categories` state with the data from the response.\r\n   * 5. If there's an error during the request, it logs the error to the console.\r\n   * 6. Finally, it sets the loading state to `false` after the request completes (either success or failure).\r\n   *\r\n   * Dependencies:\r\n   * - The function is dependent on the `Services.getCategories` method for fetching data.\r\n   * - It uses `setloading` and `setcategories` functions to update states in the component.\r\n   *\r\n   * @effect\r\n   * The hook runs only once on component mount due to an empty dependency array.\r\n   */\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setloading(true);\n      try {\n        const response = await Services.getItems();\n        console.log(\"response  is:\" + response);\n        setItems(response.data);\n        console.log(\"response data is:\" + response.data);\n      } catch (error) {}\n      setloading(false);\n    };\n    fetchData();\n  }, []);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"w-3/4  \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-4 text-lg\",\n      children: \"\\u041D\\u0430\\u0448\\u0456 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_el text-center\",\n      children: !loading && items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" box-border  relative  h-80 mx-4 mb-20\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: navigate('/'),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"block bg-zinc-300\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"inline-block object-cover w-full h-full \",\n            src: item.imagePath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute   border-gray-500 border-2  w-full bg-slate-400 truncate\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n}\n_s(MainItems, \"L8+ZMl8OXNbGCkZfTjTk5ey3/KE=\", false, function () {\n  return [useNavigate];\n});\n_c = MainItems;\nexport default MainItems;\n// {/* <body>\n// {/* {!loading && ( */}\n//   // {categories.map((category)=>(\n\n//   <div>\n//   </div>\n// //  ) )}\n// // )}\n// </body> */}\nvar _c;\n$RefreshReg$(_c, \"MainItems\");","map":{"version":3,"names":["React","useEffect","useState","Services","useNavigate","jsxDEV","_jsxDEV","MainItems","_s","loading","setloading","items","setItems","fetchData","response","getItems","console","log","data","error","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","name","src","imagePath","description","_c","$RefreshReg$"],"sources":["D:/Projects/Portfolio/full-stack/front-end/src/components/categories/Main_Items.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import Services from \"../../services/GetCategories\";\r\nimport Services from \"../../services/Services\";\r\n// import { Image } from \"react-bootstrap\";\r\nimport \"../../style/Main_Categories.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction MainItems() {\r\n  const [loading, setloading] = useState(true);\r\n  const [items, setItems] = useState(null);\r\n\r\n  // The useEffect hook is a React hook that allows you to perform side effects in your components. Side effects are things like fetching data, updating the DOM, or making network requests.\r\n  /**\r\n   * This hook is responsible for fetching category data from a service.\r\n   *\r\n   * It performs the following tasks:\r\n   * 1. On component mount, it triggers the `fetchData` function.\r\n   * 2. It sets a loading state to `true` before starting the fetch process.\r\n   * 3. It makes a request to get categories from the `Services` object.\r\n   * 4. Once the response is received, it updates the `categories` state with the data from the response.\r\n   * 5. If there's an error during the request, it logs the error to the console.\r\n   * 6. Finally, it sets the loading state to `false` after the request completes (either success or failure).\r\n   *\r\n   * Dependencies:\r\n   * - The function is dependent on the `Services.getCategories` method for fetching data.\r\n   * - It uses `setloading` and `setcategories` functions to update states in the component.\r\n   *\r\n   * @effect\r\n   * The hook runs only once on component mount due to an empty dependency array.\r\n   */\r\n  \r\n useEffect(()=>{\r\n  const fetchData=async() =>{\r\n    setloading(true)\r\n    try {\r\n      const response= await Services.getItems()\r\n      console.log(\"response  is:\"+response)\r\n\r\n      setItems(response.data);\r\n      console.log(\"response data is:\"+response.data)\r\n    } catch (error) {\r\n      \r\n    }\r\n    setloading(false)\r\n\r\n  }\r\n  fetchData();\r\n },[])\r\n const navigate=useNavigate();\r\n \r\n return (\r\n   <body className=\"w-3/4  \">\r\n      <div className=\"pl-4 text-lg\">Наші товари </div>\r\n      <div className=\"grid_el text-center\">\r\n        {!loading &&\r\n          items.map((item) => (\r\n            <div className=\" box-border  relative  h-80 mx-4 mb-20\">\r\n              <a onClick={navigate('/')}>\r\n                <p className=\"block bg-zinc-300\">{item.name}</p>\r\n                <img className=\"inline-block object-cover w-full h-full \" src={item.imagePath}></img>\r\n                <div className=\"absolute   border-gray-500 border-2  w-full bg-slate-400 truncate\">\r\n                  {item.description}\r\n                </div>\r\n              </a>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\nexport default MainItems;\r\n// {/* <body>\r\n// {/* {!loading && ( */}\r\n//   // {categories.map((category)=>(\r\n\r\n//   <div>\r\n//   </div>\r\n// //  ) )}\r\n// // )}\r\n// </body> */}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}