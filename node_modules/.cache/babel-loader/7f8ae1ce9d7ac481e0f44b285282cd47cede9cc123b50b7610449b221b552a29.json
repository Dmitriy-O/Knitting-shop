{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Portfolio\\\\full-stack\\\\front-end\\\\src\\\\components\\\\categories\\\\Main_Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Services from \"../../services/Services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainCategories() {\n  _s();\n  const [loading, setloading] = useState(true);\n  const [categories, setcategories] = useState(null);\n\n  // The useEffect hook is a React hook that allows you to perform side effects in your components. Side effects are things like fetching data, updating the DOM, or making network requests.\n  /**\r\n   * This hook is responsible for fetching category data from a service.\r\n   *\r\n   * It performs the following tasks:\r\n   * 1. On component mount, it triggers the `fetchData` function.\r\n   * 2. It sets a loading state to `true` before starting the fetch process.\r\n   * 3. It makes a request to get categories from the `Services` object.\r\n   * 4. Once the response is received, it updates the `categories` state with the data from the response.\r\n   * 5. If there's an error during the request, it logs the error to the console.\r\n   * 6. Finally, it sets the loading state to `false` after the request completes (either success or failure).\r\n   *\r\n   * Dependencies:\r\n   * - The function is dependent on the `Services.getCategories` method for fetching data.\r\n   * - It uses `setloading` and `setcategories` functions to update states in the component.\r\n   *\r\n   * @effect\r\n   * The hook runs only once on component mount due to an empty dependency array.\r\n   */\n  useEffect(() => {\n    const fetchData = async () => {\n      setloading(true);\n      try {\n        // Делаем запрос и ждем результат\n        const response = await Services.getCategories();\n\n        // Выводим весь ответ в консоль\n        console.log(\"Response from Services.getCategories:\", response);\n\n        // Если вам нужно только data, вы можете вывести и только её\n        console.log(\"Data from Services.getCategories:\", response.data);\n        setcategories(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n      setloading(false);\n    };\n    fetchData();\n  }, []);\n  // useEffect(() => {\n  //   fetch(\"http://localhost:8080/api/v1/categories\")\n  //   .then((response) => response.json())\n  //   .then((data) => categories);\n  //   console.log(response.json)\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"w-full\",\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-center w-full  \",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"basis-full\",\n          children: \"\\u0413\\u0440\\u0443\\u043F\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0456\\u0432 \\u0442\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0443\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" flex  float-right text-center \",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \" w-1/3 m-3 relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-800 text-white\",\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: category.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute right-2 bottom-1 text-white bg-slate-500 px-1\",\n              children: category.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MainCategories, \"LqzdZL09q4wnyNXpJpiEjdVb8dk=\");\n_c = MainCategories;\nexport default MainCategories;\nvar _c;\n$RefreshReg$(_c, \"MainCategories\");","map":{"version":3,"names":["React","useEffect","useState","Services","jsxDEV","_jsxDEV","MainCategories","_s","loading","setloading","categories","setcategories","fetchData","response","getCategories","console","log","data","error","className","children","map","category","fileName","_jsxFileName","lineNumber","columnNumber","name","src","image","number","id","_c","$RefreshReg$"],"sources":["D:/Projects/Portfolio/full-stack/front-end/src/components/categories/Main_Categories.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Services from \"../../services/Services\";\r\n\r\nfunction MainCategories() {\r\n  const [loading, setloading] = useState(true);\r\n  const [categories, setcategories] = useState(null);\r\n\r\n  // The useEffect hook is a React hook that allows you to perform side effects in your components. Side effects are things like fetching data, updating the DOM, or making network requests.\r\n  /**\r\n   * This hook is responsible for fetching category data from a service.\r\n   *\r\n   * It performs the following tasks:\r\n   * 1. On component mount, it triggers the `fetchData` function.\r\n   * 2. It sets a loading state to `true` before starting the fetch process.\r\n   * 3. It makes a request to get categories from the `Services` object.\r\n   * 4. Once the response is received, it updates the `categories` state with the data from the response.\r\n   * 5. If there's an error during the request, it logs the error to the console.\r\n   * 6. Finally, it sets the loading state to `false` after the request completes (either success or failure).\r\n   *\r\n   * Dependencies:\r\n   * - The function is dependent on the `Services.getCategories` method for fetching data.\r\n   * - It uses `setloading` and `setcategories` functions to update states in the component.\r\n   *\r\n   * @effect\r\n   * The hook runs only once on component mount due to an empty dependency array.\r\n   */\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setloading(true);\r\n      try {\r\n        // Делаем запрос и ждем результат\r\n        const response = await Services.getCategories();\r\n\r\n        // Выводим весь ответ в консоль\r\n        console.log(\"Response from Services.getCategories:\", response);\r\n\r\n        // Если вам нужно только data, вы можете вывести и только её\r\n        console.log(\"Data from Services.getCategories:\", response.data);\r\n        setcategories(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setloading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:8080/api/v1/categories\")\r\n  //   .then((response) => response.json())\r\n  //   .then((data) => categories);\r\n  //   console.log(response.json)\r\n  // }, []);\r\n\r\n  return (\r\n    <body className=\"w-full\">\r\n      {!loading && (\r\n        <div >\r\n          {categories.map((category) => (\r\n            <div className=\" text-center w-full  \" key={category.id}>\r\n              <p className=\"basis-full\">Групи товарів та послуг</p>\r\n              <div className=\" flex  float-right text-center \">\r\n                <p className=\" w-1/3 m-3 relative\">\r\n                  <div className=\"bg-gray-800 text-white\">{category.name}</div>\r\n                  <img src={category.image}></img>\r\n                  <div className=\"absolute right-2 bottom-1 text-white bg-slate-500 px-1\">\r\n                    {category.number}\r\n                  </div>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </body>\r\n  );\r\n}\r\nexport default MainCategories;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}